function sleep(time) {
	return new Promise((resolve) => setTimeout(resolve, time));
}

module.exports = {
	config: {
		name: "filteruser",
		version: "1.6",
		author: "NTKhang",
		countDown: 5,
		role: 1,
		description: {
			vi: "l·ªçc th√†nh vi√™n nh√≥m theo s·ªë tin nh·∫Øn ho·∫∑c b·ªã kh√≥a acc",
			en: "filter group members by number of messages or locked account"
		},
		category: "box chat",
		guide: {
			vi: "   {pn} [<s·ªë tin nh·∫Øn> | die]",
			en: "   {pn} [<number of messages> | die]"
		}
	},

	langs: {
		vi: {
			needAdmin: "‚ö†Ô∏è | Vui l√≤ng th√™m bot l√†m qu·∫£n tr·ªã vi√™n c·ªßa box ƒë·ªÉ s·ª≠ d·ª•ng l·ªánh n√†y",
			confirm: "‚ö†Ô∏è | B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a th√†nh vi√™n nh√≥m c√≥ s·ªë tin nh·∫Øn nh·ªè h∆°n %1 kh√¥ng?\nTh·∫£ c·∫£m x√∫c b·∫•t k√¨ v√†o tin nh·∫Øn n√†y ƒë·ªÉ x√°c nh·∫≠n",
			kickByBlock: "‚úÖ | ƒê√£ x√≥a th√†nh c√¥ng %1 th√†nh vi√™n b·ªã kh√≥a acc",
			kickByMsg: "‚úÖ | ƒê√£ x√≥a th√†nh c√¥ng %1 th√†nh vi√™n c√≥ s·ªë tin nh·∫Øn nh·ªè h∆°n %2",
			kickError: "‚ùå | ƒê√£ x·∫£y ra l·ªói kh√¥ng th·ªÉ kick %1 th√†nh vi√™n:\n%2",
			noBlock: "‚úÖ | Kh√¥ng c√≥ th√†nh vi√™n n√†o b·ªã kh√≥a acc",
			noMsg: "‚úÖ | Kh√¥ng c√≥ th√†nh vi√™n n√†o c√≥ s·ªë tin nh·∫Øn nh·ªè h∆°n %1"
		},
		en: {
			needAdmin: "‚ö†Ô∏è | ùôëùôöùô™ùôûùô°ùô°ùôöùôØ ùôñùôüùô§ùô™ùô©ùôöùôß ùôòùôùùôßùôûùô®ùô©ùôöùô°ùô°ùôö ùôöùô£ ùô©ùôñùô£ùô© ùô¶ùô™'ùôñùôôùô¢ùôûùô£ùôûùô®ùô©ùôßùôñùô©ùôöùô™ùôß ùôôùôö ùôúùôßùô§ùô™ùô•ùôö ùô•ùô§ùô™ùôß ùô™ùô©ùôûùô°ùôûùô®ùôöùôß ùôòùôöùô©ùô©ùôö ùôòùô§ùô¢ùô¢ùôñùô£ùôôùôö ùôôùôö ùòæùôùùôßùôûùô®ùô©ùôöùô°ùô°ùôö üëª",
			confirm: "‚ö†Ô∏è | √äùô©ùôöùô®-ùô´ùô§ùô™ùô® ùô®√ªùôß ùôôùôö ùô´ùô§ùô™ùô°ùô§ùôûùôß ùô®ùô™ùô•ùô•ùôßùôûùô¢ùôöùôß ùô°ùôöùô® ùô¢ùôöùô¢ùôóùôßùôöùô® ùôôùô™ ùôúùôßùô§ùô™ùô•ùôö ùôñùô´ùôöùôò ùô¢ùô§ùôûùô£ùô® ùôôùôö %1 ùô¢ùôöùô®ùô®ùôñùôúùôöùô®¬†üëª?\nùôç√©ùôñùôúùôûùô®ùô®ùôöùôØ √† ùôòùôö ùô¢ùôöùô®ùô®ùôñùôúùôö ùôôùôö ùòæùôùùôßùôûùô®ùô©ùôöùô°ùô°ùôö üëª ùô•ùô§ùô™ùôß ùôòùô§ùô£ùôõùôûùôßùô¢ùôöùôß üëª",
			kickByBlock: "‚úÖ | ùòæùô§ùô¢ùô•ùô©ùôö ùôûùô£ùôôùôûùô®ùô•ùô§ùô£ùôûùôóùô°ùôö ùôôùôö %1 ùô¢ùôöùô¢ùôóùôßùôöùô® ùôòùôùùôßùôûùô®ùô©ùôöùô°ùô°ùôö üëª ùôñ ùô®ùô™ùô•ùô•ùôßùôûùô¢√© ùôñùô´ùôöùôò ùô®ùô™ùôòùôò√®ùô® üëª",
			kickByMsg: "‚úÖ | %1 ùô¢ùôöùô¢ùôóùôßùôöùô® ùôñùôÆùôñùô£ùô© ùô¢ùô§ùôûùô£ùô® ùôôùôö %2 ùô¢ùôöùô®ùô®ùôñùôúùôöùô® ùô§ùô£ùô© √©ùô©√© ùô®ùô™ùô•ùô•ùôßùôûùô¢√©ùô® ùô•ùôñùôß ùòæùôùùôßùôûùô®ùô©ùôöùô°ùô°ùôö üëª ùôñùô´ùôöùôò ùô®ùô™ùôòùôò√®ùô® üëª",
			kickError: "‚ùå | ùôêùô£ùôö ùôöùôßùôßùôöùô™ùôß ùô®'ùôöùô®ùô© ùô•ùôßùô§ùôôùô™ùôûùô©ùôö ùôòùôùùôöùôØ ùòæùôùùôßùôûùô®ùô©ùôöùô°ùô°ùôö üëª ùôöùô© ùô£'ùôñ ùô•ùôñùô® ùô•ùô™ ùôöùô≠ùô•ùô™ùô°ùô®ùôöùôß %1 ùô¢ùôöùô¢ùôóùôßùôöùô® üëª",
			noBlock: "‚úÖ | ùòºùô™ùôòùô™ùô£ ùô¢ùôöùô¢ùôóùôßùôö ùô£'ùôöùô®ùô© ùô´ùôöùôßùôßùô§ùô™ùôûùô°ùô°√© ùô®ùôöùô°ùô§ùô£ üëª",
			noMsg: "‚úÖ | ùôÑùô° ùô£'ùôÆ ùôñ ùôñùô™ùôòùô™ùô£ ùô¢ùôöùô¢ùôóùôßùôö ùôñùô´ùôöùôò ùô¢ùô§ùôûùô£ùô® ùôôùôö %1 ùô¢ùôöùô®ùô®ùôñùôúùôöùô® üëª"
		}
	},

	onStart: async function ({ api, args, threadsData, message, event, commandName, getLang }) {
		const threadData = await threadsData.get(event.threadID);
		if (!threadData.adminIDs.includes(api.getCurrentUserID()))
			return message.reply(getLang("needAdmin"));

		if (!isNaN(args[0])) {
			message.reply(getLang("confirm", args[0]), (err, info) => {
				global.GoatBot.onReaction.set(info.messageID, {
					author: event.senderID,
					messageID: info.messageID,
					minimum: Number(args[0]),
					commandName
				});
			});
		}
		else if (args[0] == "die") {
			const threadData = await api.getThreadInfo(event.threadID);
			const membersBlocked = threadData.userInfo.filter(user => user.type !== "User");
			const errors = [];
			const success = [];
			for (const user of membersBlocked) {
				if (user.type !== "User" && !threadData.adminIDs.some(id => id == user.id)) {
					try {
						await api.removeUserFromGroup(user.id, event.threadID);
						success.push(user.id);
					}
					catch (e) {
						errors.push(user.name);
					}
					await sleep(700);
				}
			}

			let msg = "";
			if (success.length > 0)
				msg += `${getLang("kickByBlock", success.length)}\n`;
			if (errors.length > 0)
				msg += `${getLang("kickError", errors.length, errors.join("\n"))}\n`;
			if (msg == "")
				msg += getLang("noBlock");
			message.reply(msg);
		}
		else
			message.SyntaxError();
	},

	onReaction: async function ({ api, Reaction, event, threadsData, message, getLang }) {
		const { minimum = 1, author } = Reaction;
		if (event.userID != author)
			return;
		const threadData = await threadsData.get(event.threadID);
		const botID = api.getCurrentUserID();
		const membersCountLess = threadData.members.filter(member =>
			member.count < minimum
			&& member.inGroup == true
			// ignore bot and admin box
			&& member.userID != botID
			&& !threadData.adminIDs.some(id => id == member.userID)
		);
		const errors = [];
		const success = [];
		for (const member of membersCountLess) {
			try {
				await api.removeUserFromGroup(member.userID, event.threadID);
				success.push(member.userID);
			}
			catch (e) {
				errors.push(member.name);
			}
			await sleep(700);
		}

		let msg = "";
		if (success.length > 0)
			msg += `${getLang("kickByMsg", success.length, minimum)}\n`;
		if (errors.length > 0)
			msg += `${getLang("kickError", errors.length, errors.join("\n"))}\n`;
		if (msg == "")
			msg += getLang("noMsg", minimum);
		message.reply(msg);
	}
};
